#!/bin/bash

# Mounts Android Phones and USB drives (encrypted or not). This script will
# replace the older `dmenumount` which had extra steps and couldn't handle
# encrypted drives.
# TODO: Remove already mounted Android phones from prompt.
# TODO: Try mount first for drives if in fstab to avoid directory prompt?
# TODO: Add some support for connecting iPhones (although they are annoying).

set -e

# Check for phones.
phones="$(simple-mtpfs -l 2>/dev/null | sed "s/^/ðŸ“±/")"
# Check for drives.
lsblkoutput="$(lsblk -rpo "uuid,name,type,size,label,mountpoint,fstype")"
# Get all LUKS drives
allluks="$(echo "$lsblkoutput" | grep crypto_LUKS)" || true
# Get a list of the LUKS drive UUIDs already decrypted.
decrypted="$(find /dev/disk/by-id/dm-uuid-CRYPT-LUKS2-* | sed "s|.*LUKS2-||;s|-.*||")" || true
# Functioning for formatting drives correctly for dmenu:
filter() { sed "s/ /:/g" | awk -F':' '$7==""{printf "%s%s (%s) %s\n",$1,$3,$5,$6}' ; }

# Get only LUKS drives that are not decrypted.
IFS='
'
unopenedluks="$(for drive in $allluks; do
	uuid="${drive%% *}"
	uuid="${uuid//-}"	# This is a bashism.
	for open in $decrypted; do
		[ "$uuid" = "$open" ] && break 1
	done && continue 1
	echo "ðŸ”’ $drive"
done | filter)"

# Get all normal, non-encrypted or decrypted partitions that are not mounted.
normalparts="$(echo "$lsblkoutput"| grep -v crypto_LUKS | grep 'part\|rom\|crypt' | sed "s/^/ðŸ’¾ /" | filter )"

# Add all to one variable. If no mountable drives found, exit.
alldrives="$(echo "$phones
$unopenedluks
$normalparts" | sed "/^$/d;s/ *$//")"
test -n "$alldrives"

# Feed all found drives to dmenu and get user choice.
chosen="$(echo "$alldrives" | dmenu -p "Mount which drive?" -i)"

# Function for prompting user for a mountpoint.
getmount(){
	mp="$(find /mnt /media /mount /home -maxdepth 1 -type d 2>/dev/null | dmenu -i -p "Mount this drive where?")"
	test -n "$mp"
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?")
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
	fi
}

case "$chosen" in
	ðŸ’¾*)
		chosen="${chosen%% *}"
		chosen="${chosen:1}"	# This is a bashism.
		getmount
		sudo -A mount "$chosen" "$mp"
		notify-send "ðŸ’¾Drive Mounted." "$chosen mounted to $mp."
		;;

	ðŸ”’*)
		chosen="${chosen%% *}"
		chosen="${chosen:1}"	# This is a bashism.
		# Number the drive.
		while true; do
			[ -f "/dev/mapper/usb$num" ] || break
			num="$(printf "%02d" "$((num +1))")"
		done

		# Decrypt in a terminal window
		${TERMINAL:-st} -n floatterm -g 60x1 -e sudo cryptsetup open "$chosen" "usb$num"
		# Check if now decrypted.
		test -b "/dev/mapper/usb$num"

		getmount
		sudo -A mount "/dev/mapper/usb$num"  "$mp"
		notify-send "ðŸ”“Decrypted drive Mounted." "$chosen decrypted and mounted to $mp."
		;;

	ðŸ“±*)
		getmount
		echo "OK" | dmenu -i -p "Tap Allow on your phone if it asks for permission and then press enter"
		chosen="${chosen%%:*}"
		chosen="${chosen:1}"	# This is a bashism.
		simple-mtpfs --device "$chosen" "$mp"
		notify-send "ðŸ¤– Android Mounted." "Android device mounted to $mp."
		;;
esac
