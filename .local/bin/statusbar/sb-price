#!/bin/sh

# Usage:
#	price <url> <Name of currency> <icon> <Price to show in (optional)> <dwmblocks signal (optional)>
#	price bat "Basic Attention Token" 🦁
# When the name of the currency is multi-word, put it in quotes.

[ -z "$3" ] && exit 1

# handle optional parameters in $4 and/or $5
echo "$4" | grep -q '^[0-9]' &&
	currency='usd' && sig=$4 ||
	{ currency="${4:-usd}"; sig=$5; }

url="${CRYPTOURL:-rate.sx}"
interval="@14d"	# History contained in chart preceded by '@' (7d = 7 days)
dir="${XDG_CACHE_HOME:-$HOME/.cache}/crypto-prices"
pricefile="$dir/$1-$currency"
chartfile="$dir/$1-$currency-chart"
filestat="$(stat -c %x "$pricefile" 2>/dev/null)"

[ -d "$dir" ] || mkdir -p "$dir"

updateprice() { curl -sf $currency.$url/{1$1,$1$interval} --output "$pricefile" --output "$chartfile" ||
	rm -f "$pricefile" "$chartfile" ;}

[ "${filestat%% *}" != "$(date '+%Y-%m-%d')" ] &&
	updateme="1"

case $BLOCK_BUTTON in
	1) setsid "$TERMINAL" -e less -Srf "$chartfile" ;;
	2) notify-send -u low "$3 Updating..." "Updating $2 price..." ; updateme="1" ; showupdate="1" ;;
	3) uptime="$(date -d "$filestat" '+%D at %T' | sed "s|$(date '+%D')|Today|")"
		notify-send "$3 $2 module" "\- <b>Exact price: \$$(cat "$pricefile")</b>
- Left click for chart of changes.
- Middle click to update.
- Shows 🔃 if updating prices.
- <b>Last updated:
	$uptime</b>" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

[ -n "$updateme" ] &&
	if [ -n "$showupdate" ]; then
		updateprice "$1" && notify-send "$3 Update complete." "$2 price is now \$$(cat "$pricefile")"
	else
		[ -n "$sig" ] &&
			{ ( updateprice "$1" && pkill -RTMIN+"$sig" "${STATUSBAR:-dwmblocks}" ) & echo; exit; } ||
			updateprice "$1"
	fi

case "$currency" in
	usd) symb="$" ;;
	gbp) symb="£" ;;
	eur) symb="€" ;;
	btc) symb="" ;;
esac

[ -f "$pricefile" ] && printf "$3$symb%0.2f" "$(cat "$pricefile")"
