#!/bin/sh

# Usage:
#	price <dwmblocks signal> <url> <Name of currency> <icon> <Price to show in>
#	price 20 bat "Basic Attention Token" 🦁
# When the name of the currency is multi-word, put it in quotes.

[ -z "$4" ] && exit 1

# use $5 as currency, if not passed in use "usd" as default
url="${CRYPTOURL:-rate.sx}"
currency="${5:-usd}"
interval="@14d"	# History contained in chart preceded by '@' (7d = 7 days)
dir="${XDG_CACHE_HOME:-$HOME/.cache}/crypto-prices"
pricefile="$dir/$2-$currency"
chartfile="$dir/$2-$currency-chart"
filestat="$(stat -c %x "$pricefile" 2>/dev/null)"

[ -d "$dir" ] || mkdir -p "$dir"

updateprice() { curl -sf $currency.$url/{1$1,$1$interval} --output "$pricefile" --output "$chartfile" ||
	rm -f "$pricefile" "$chartfile" ;}

[ "${filestat%% *}" != "$(date '+%Y-%m-%d')" ] &&
	updateme="1"

case $BLOCK_BUTTON in
	1) setsid "$TERMINAL" -e less -Srf "$chartfile" ;;
	2) notify-send -u low "$4 Updating..." "Updating $3 price..." ; updateme="1" ; showupdate="1" ;;
	3) uptime="$(date -d "$filestat" '+%D at %T' | sed "s|$(date '+%D')|Today|")"
		notify-send "$4 $3 module" "\- <b>Exact price: \$$(cat "$pricefile")</b>
- Left click for chart of changes.
- Middle click to update.
- Shows 🔃 if updating prices.
- <b>Last updated:
	$uptime</b>" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

[ -n "$updateme" ] &&
	if [ -n "$showupdate" ]; then
		updateprice "$2" && notify-send "$4 Update complete." "$3 price is now \$$(cat "$pricefile")"
	else
		( updateprice "$2" && pkill -RTMIN+"$1" "${STATUSBAR:-dwmblocks}") & echo; exit
	fi

case "$currency" in
	usd) symb="$" ;;
	gbp) symb="£" ;;
	eur) symb="€" ;;
	btc) symb="" ;;
esac

[ -f "$pricefile" ] && printf "$4$symb%0.2f" "$(cat "$pricefile")"
